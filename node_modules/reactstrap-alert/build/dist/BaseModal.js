"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseModal = BaseModal;

var _react = _interopRequireWildcard(require("react"));

var _reactstrap = require("reactstrap");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function BaseModal(props) {
  var _useState = (0, _react.useState)(true),
      _useState2 = _slicedToArray(_useState, 2),
      isOpen = _useState2[0],
      _toggle = _useState2[1];

  function onResolve() {
    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    _toggle(false);

    props.resolve(value);
  }

  return _react["default"].createElement(_reactstrap.Modal, _extends({
    isOpen: isOpen,
    toggle: function toggle() {
      return onResolve(false);
    }
  }, props.modalProps || {}), _react["default"].createElement(_reactstrap.ModalHeader, _extends({
    toggle: function toggle() {
      return onResolve(false);
    }
  }, props.modalHeaderProps || {}), props.title), _react["default"].createElement(_reactstrap.ModalBody, props.modalBodyProps || {}, props.message), _react["default"].createElement(_reactstrap.ModalFooter, props.modalFooterProps || {}, props.confirmText && _react["default"].createElement(_reactstrap.Button, {
    color: props.confirmColor,
    onClick: function onClick() {
      return onResolve(true);
    }
  }, props.confirmText), props.cancelText && _react["default"].createElement(_reactstrap.Button, {
    color: props.cancelColor,
    onClick: function onClick() {
      return onResolve(false);
    }
  }, props.cancelText)));
}