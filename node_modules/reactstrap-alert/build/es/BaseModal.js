import _extends from "@babel/runtime/helpers/esm/extends";
import React, { useState } from 'react';
import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';
export function BaseModal(props) {
  var _useState = useState(true),
      isOpen = _useState[0],
      _toggle = _useState[1];

  function onResolve(value) {
    if (value === void 0) {
      value = false;
    }

    _toggle(false);

    props.resolve(value);
  }

  return React.createElement(Modal, _extends({
    isOpen: isOpen,
    toggle: function toggle() {
      return onResolve(false);
    }
  }, props.modalProps || {}), React.createElement(ModalHeader, _extends({
    toggle: function toggle() {
      return onResolve(false);
    }
  }, props.modalHeaderProps || {}), props.title), React.createElement(ModalBody, props.modalBodyProps || {}, props.message), React.createElement(ModalFooter, props.modalFooterProps || {}, props.confirmText && React.createElement(Button, {
    color: props.confirmColor,
    onClick: function onClick() {
      return onResolve(true);
    }
  }, props.confirmText), props.cancelText && React.createElement(Button, {
    color: props.cancelColor,
    onClick: function onClick() {
      return onResolve(false);
    }
  }, props.cancelText)));
}